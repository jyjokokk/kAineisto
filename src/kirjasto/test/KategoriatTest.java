package kirjasto.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import kirjasto.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.04.22 21:11:58 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class KategoriatTest {



  // Generated by ComTest BEGIN
  /** testKategoriat20 */
  @Test
  public void testKategoriat20() {    // Kategoriat: 20
    Kategoriat kat = new Kategoriat(); 
    assertEquals("From: Kategoriat line: 22", 0, kat.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testLisaa65 */
  @Test
  public void testLisaa65() {    // Kategoriat: 65
    Kategoriat kategoriat = new Kategoriat(); 
    Kategoria kat1 = new Kategoria(), kat2 = new Kategoria(); 
    kat1.parse("2|Scifi|Kuvaus|"); kat2.parse("2|Scifi|Placeholder"); 
    kategoriat.lisaa(kat1); 
    kat2 = kategoriat.lisaa(kat2); 
    kat2.equals(kat1); 
    Kategoria kat3 = new Kategoria(); 
    kat3 = kategoriat.lisaa(new Kategoria("4|Kauhu|Kuvaus")); 
    assertEquals("From: Kategoriat line: 74", true, kat3.equals(kat3)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLisaa91 
   * @throws TietoException when error
   */
  @Test
  public void testLisaa91() throws TietoException {    // Kategoriat: 91
    Kategoriat kategoriat = new Kategoriat(); 
    kategoriat.tyhjenna(); 
    Kategoria kat1 = new Kategoria(), kat2 = new Kategoria(), kat3 = new Kategoria(); 
    kat1.parse("2|Scifi|Kuvaus|"); kat2.parse("2|Scifi|Placeholder"); 
    kat1 = kategoriat.lisaa("1|Fantasia|Kuvaus"); 
    kat2 = kategoriat.lisaa("2|Scifi|Placeholder"); 
    kat3 = kategoriat.lisaa("3|Fantasia|Tarkempi kuvaus"); 
    assertEquals("From: Kategoriat line: 100", "2|Scifi|Placeholder", kat2.toString()); 
    assertEquals("From: Kategoriat line: 101", "1|Fantasia|Tarkempi kuvaus", kat1.toString()); 
    assertEquals("From: Kategoriat line: 102", "1|Fantasia|Tarkempi kuvaus", kat3.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testTyhjenna113 
   * @throws TietoException when error
   */
  @Test
  public void testTyhjenna113() throws TietoException {    // Kategoriat: 113
    Kategoriat kat = new Kategoriat(); 
    kat.tyhjenna(); 
    kat.lueTiedostosta("testFiles/kategoriat.dat"); 
    assertEquals("From: Kategoriat line: 118", 6, kat.getLkm()); 
    kat.tyhjenna(); 
    assertEquals("From: Kategoriat line: 120", 0, kat.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testGetLkm132 
   * @throws TietoException when error
   */
  @Test
  public void testGetLkm132() throws TietoException {    // Kategoriat: 132
    Kategoriat kat = new Kategoriat(); 
    kat.lueTiedostosta("testFiles/kategoriat.dat"); 
    assertEquals("From: Kategoriat line: 136", 6, kat.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testAnna150 
   * @throws TietoException when error
   */
  @Test
  public void testAnna150() throws TietoException {    // Kategoriat: 150
    Kategoriat kategoriat = new Kategoriat(); 
    kategoriat.tyhjenna(); 
    Kategoria kat1 = new Kategoria(), kat2 = new Kategoria(); 
    Kategoria kat3 = new Kategoria(); 
    kat1.parse("1|Fantasia|Kuvaus"); kat2.parse("2|Scifi|Placeholder"); 
    kat3.parse("3|Kauhu|Descriptor"); 
    kategoriat.lisaa(kat1); kategoriat.lisaa(kat2); kategoriat.lisaa(kat3); 
    assertEquals("From: Kategoriat line: 159", kat1, kategoriat.anna(0)); 
    assertEquals("From: Kategoriat line: 160", kat2, kategoriat.anna(1)); 
    assertEquals("From: Kategoriat line: 161", kat3, kategoriat.anna(2)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testHaeId176 
   * @throws TietoException when error
   */
  @Test
  public void testHaeId176() throws TietoException {    // Kategoriat: 176
    Kategoriat kategoriat = new Kategoriat(); 
    kategoriat.tyhjenna(); 
    Kategoria kat1 = new Kategoria(), kat2 = new Kategoria(), kat3 = new Kategoria(); 
    kat1 = kategoriat.lisaa("1|Fantasia|Kuvaus"); 
    kat2 = kategoriat.lisaa("2|Scifi|Placeholder"); 
    kat3 = kategoriat.lisaa("3|Fantasia|Tarkempi kuvaus"); 
    assertEquals("From: Kategoriat line: 184", kat1, kategoriat.haeId(1)); 
    assertEquals("From: Kategoriat line: 185", kat3, kategoriat.haeId(1)); 
    assertEquals("From: Kategoriat line: 186", kat2, kategoriat.haeId(2)); 
    assertEquals("From: Kategoriat line: 187", null, kategoriat.haeId(3)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testTallenna204 
   * @throws TietoException when error
   */
  @Test
  public void testTallenna204() throws TietoException {    // Kategoriat: 204
    Kategoriat uusi = new Kategoriat(); 
    Kategoriat toka = new Kategoriat(); 
    uusi.lueTiedostosta("testFiles/kategoriat.dat"); 
    toka.lueTiedostosta("testFiles/kategoriatEri.dat"); 
    assertEquals("From: Kategoriat line: 210", false, uusi.equals(toka)); 
    toka.tyhjenna(); 
    toka.lueTiedostosta("testFiles/kategoriat.dat"); 
    assertEquals("From: Kategoriat line: 213", true, uusi.equals(toka)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testEquals241 
   * @throws TietoException when error
   */
  @Test
  public void testEquals241() throws TietoException {    // Kategoriat: 241
    Kategoriat tama = new Kategoriat(); 
    Kategoriat toinen = new Kategoriat(); 
    tama.lisaa(new Kategoria()); 
    toinen.lisaa("2|Scifi|Placeholder"); 
    assertEquals("From: Kategoriat line: 247", true, tama.equals(tama)); 
    assertEquals("From: Kategoriat line: 248", false, tama.equals(toinen)); 
    toinen.tyhjenna(); tama.tyhjenna(); 
    assertEquals("From: Kategoriat line: 250", true, tama.equals(toinen)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta268 
   * @throws TietoException when error
   */
  @Test
  public void testLueTiedostosta268() throws TietoException {    // Kategoriat: 268
    Kategoriat uusi = new Kategoriat(); 
    Kategoriat toka = new Kategoriat(); 
    uusi.lueTiedostosta("testFiles/kategoriat.dat"); 
    toka.lueTiedostosta("testFiles/kategoriat.dat"); 
    assertEquals("From: Kategoriat line: 274", true, uusi.equals(toka)); 
    toka.lueTiedostosta("testFiles/kategoriatEri.dat"); 
    assertEquals("From: Kategoriat line: 276", false, uusi.equals(toka)); 
  } // Generated by ComTest END
}