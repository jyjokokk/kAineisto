package kirjasto.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import kirjasto.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.04.05 03:19:54 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class KategoriatTest {



  // Generated by ComTest BEGIN
  /** testLisaa60 */
  @Test
  public void testLisaa60() {    // Kategoriat: 60
    Kategoriat kategoriat = new Kategoriat(); 
    Kategoria kat1 = new Kategoria(), kat2 = new Kategoria(); 
    kat1.parse("2|Scifi|Kuvaus|"); kat2.parse("2|Scifi|Placeholder"); 
    kategoriat.lisaa(kat1); 
    kat2 = kategoriat.lisaa(kat2); 
    kat2.equals(kat1); 
    Kategoria kat3 = new Kategoria(); 
    kat3 = kategoriat.lisaa(new Kategoria("4|Kauhu|Kuvaus")); 
    assertEquals("From: Kategoriat line: 69", true, kat3.equals(kat3)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testLisaa85 */
  @Test
  public void testLisaa85() {    // Kategoriat: 85
    Kategoriat kategoriat = new Kategoriat(); 
    kategoriat.tyhjenna(); 
    Kategoria kat1 = new Kategoria(), kat2 = new Kategoria(), kat3 = new Kategoria(); 
    kat1.parse("2|Scifi|Kuvaus|"); kat2.parse("2|Scifi|Placeholder"); 
    kat1 = kategoriat.lisaa("1|Fantasia|Kuvaus"); 
    kat2 = kategoriat.lisaa("2|Scifi|Placeholder"); 
    kat3 = kategoriat.lisaa("3|Fantasia|Tarkempi kuvaus"); 
    assertEquals("From: Kategoriat line: 93", "2|Scifi|Placeholder", kat2.toString()); 
    assertEquals("From: Kategoriat line: 94", "1|Fantasia|Tarkempi kuvaus", kat1.toString()); 
    assertEquals("From: Kategoriat line: 95", "1|Fantasia|Tarkempi kuvaus", kat3.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testTyhjenna106 
   * @throws TietoException when error
   */
  @Test
  public void testTyhjenna106() throws TietoException {    // Kategoriat: 106
    Kategoriat kat = new Kategoriat(); 
    kat.tyhjenna(); 
    kat.lueTiedostosta("testFiles/kategoriat.dat"); 
    assertEquals("From: Kategoriat line: 111", 6, kat.getLkm()); 
    kat.tyhjenna(); 
    assertEquals("From: Kategoriat line: 113", 0, kat.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnna136 */
  @Test
  public void testAnna136() {    // Kategoriat: 136
    Kategoriat kategoriat = new Kategoriat(); 
    kategoriat.tyhjenna(); 
    Kategoria kat1 = new Kategoria(), kat2 = new Kategoria(); 
    Kategoria kat3 = new Kategoria(); 
    kat1.parse("1|Fantasia|Kuvaus"); kat2.parse("2|Scifi|Placeholder"); 
    kat3.parse("3|Kauhu|Descriptor"); 
    kategoriat.lisaa(kat1); kategoriat.lisaa(kat2); kategoriat.lisaa(kat3); 
    assertEquals("From: Kategoriat line: 144", kat1, kategoriat.anna(0)); 
    assertEquals("From: Kategoriat line: 145", kat2, kategoriat.anna(1)); 
    assertEquals("From: Kategoriat line: 146", kat3, kategoriat.anna(2)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testHaeId161 */
  @Test
  public void testHaeId161() {    // Kategoriat: 161
    Kategoriat kategoriat = new Kategoriat(); 
    kategoriat.tyhjenna(); 
    Kategoria kat1 = new Kategoria(), kat2 = new Kategoria(), kat3 = new Kategoria(); 
    kat1 = kategoriat.lisaa("1|Fantasia|Kuvaus"); 
    kat2 = kategoriat.lisaa("2|Scifi|Placeholder"); 
    kat3 = kategoriat.lisaa("3|Fantasia|Tarkempi kuvaus"); 
    assertEquals("From: Kategoriat line: 168", kat1, kategoriat.haeId(1)); 
    assertEquals("From: Kategoriat line: 169", kat3, kategoriat.haeId(1)); 
    assertEquals("From: Kategoriat line: 170", kat2, kategoriat.haeId(2)); 
    assertEquals("From: Kategoriat line: 171", null, kategoriat.haeId(3)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testTallenna189 
   * @throws TietoException when error
   */
  @Test
  public void testTallenna189() throws TietoException {    // Kategoriat: 189
    Kategoriat uusi = new Kategoriat(); 
    Kategoriat toka = new Kategoriat(); 
    uusi.lueTiedostosta("testFiles/kategoriat.dat"); 
    toka.lueTiedostosta("testFiles/kategoriatEri.dat"); 
    assertEquals("From: Kategoriat line: 195", false, uusi.equals(toka)); 
    toka.tyhjenna(); 
    toka.lueTiedostosta("testFiles/kategoriat.dat"); 
    assertEquals("From: Kategoriat line: 198", true, uusi.equals(toka)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testEquals225 */
  @Test
  public void testEquals225() {    // Kategoriat: 225
    Kategoriat tama = new Kategoriat(); 
    Kategoriat toinen = new Kategoriat(); 
    tama.lisaa(new Kategoria()); 
    toinen.lisaa("2|Scifi|Placeholder"); 
    assertEquals("From: Kategoriat line: 230", true, tama.equals(tama)); 
    assertEquals("From: Kategoriat line: 231", false, tama.equals(toinen)); 
    toinen.tyhjenna(); tama.tyhjenna(); 
    assertEquals("From: Kategoriat line: 233", true, tama.equals(toinen)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta251 
   * @throws TietoException when error
   */
  @Test
  public void testLueTiedostosta251() throws TietoException {    // Kategoriat: 251
    Kategoriat uusi = new Kategoriat(); 
    Kategoriat toka = new Kategoriat(); 
    uusi.lueTiedostosta("testFiles/kategoriat.dat"); 
    toka.lueTiedostosta("testFiles/kategoriat.dat"); 
    assertEquals("From: Kategoriat line: 257", true, uusi.equals(toka)); 
    toka.lueTiedostosta("testFiles/kategoriatEri.dat"); 
    assertEquals("From: Kategoriat line: 259", false, uusi.equals(toka)); 
  } // Generated by ComTest END
}