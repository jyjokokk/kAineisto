package kirjasto.test;
// Generated by ComTest BEGIN
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
import kirjasto.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.04.22 19:51:03 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class TeoksetTest {



  // Generated by ComTest BEGIN
  /** 
   * testLisaa53 
   * @throws TietoException when error
   */
  @Test
  public void testLisaa53() throws TietoException {    // Teokset: 53
    Teokset teokset = new Teokset(); 
    Teos lotr1 = new Teos(), lotr2 = new Teos(); 
    Teos lotr3 = new Teos(); 
    assertEquals("From: Teokset line: 58", 0, teokset.getLkm()); 
    teokset.lisaa(lotr1); assertEquals("From: Teokset line: 59", 1, teokset.getLkm()); 
    teokset.lisaa(lotr2); assertEquals("From: Teokset line: 60", 2, teokset.getLkm()); 
    teokset.lisaa(lotr3); assertEquals("From: Teokset line: 61", 3, teokset.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testHaeId83 
   * @throws TietoException when error
   */
  @Test
  public void testHaeId83() throws TietoException {    // Teokset: 83
    Teokset teokset = new Teokset(); 
    Teos lotr1 = new Teos(), lotr2 = new Teos(), lotr3 = new Teos(); 
    lotr1.vastaaLotr(); lotr3.vastaaLotr(); lotr2.vastaaLotr(); 
    int idLotr1 = lotr1.getId(); 
    teokset.lisaa(lotr1); teokset.lisaa(lotr2); teokset.lisaa(lotr3); 
    assertEquals("From: Teokset line: 90", true, teokset.haeId(idLotr1) == lotr1); 
    assertEquals("From: Teokset line: 91", true, teokset.haeId(idLotr1 + 2) == lotr2); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testLisaa109 */
  @Test
  public void testLisaa109() {    // Teokset: 109
    Teokset teokset = new Teokset(); 
    teokset.lisaa("1|123-123-123-123|Uusi Kirja|Matti Meikalainen|1990"); 
    assertEquals("From: Teokset line: 112", 1, teokset.getLkm()); 
    teokset.lisaa("2|222-333-444-555|Toinen Kirja|Matti Meikalainen|1990"); 
    assertEquals("From: Teokset line: 114", "2|222-333-444-555|Toinen Kirja|Matti Meikalainen|1990", teokset.hae(2).toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLisaaTaiMuuta137 
   * @throws TietoException when error
   */
  @Test
  public void testLisaaTaiMuuta137() throws TietoException {    // Teokset: 137
    Teokset teokset = new Teokset(); 
    teokset.lueTiedostosta("testFiles/teokset.dat"); 
    Teos kirja = new Teos("1|000-000-000-000|Muutettu Kirja|Matti Meikalainen|1990"); 
    teokset.lisaaTaiMuuta(kirja); 
    assertEquals("From: Teokset line: 143", "1|000-000-000-000|Muutettu Kirja|Matti Meikalainen|1990", teokset.hae(1).toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testPoista163 
   * @throws TietoException when error
   */
  @Test
  public void testPoista163() throws TietoException {    // Teokset: 163
    Teokset teokset = new Teokset(); 
    teokset.lueTiedostosta("testFiles/teokset.dat"); 
    assertEquals("From: Teokset line: 167", 9, teokset.getLkm()); 
    teokset.poista(1); 
    teokset.poista(2); 
    assertEquals("From: Teokset line: 170", 7, teokset.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testTyhjenna189 
   * @throws TietoException when error
   */
  @Test
  public void testTyhjenna189() throws TietoException {    // Teokset: 189
    Teokset uusi = new Teokset(); 
    uusi.lueTiedostosta("testFiles/teokset.dat"); 
    assertEquals("From: Teokset line: 193", 9, uusi.getLkm()); 
    uusi.tyhjenna(); 
    assertEquals("From: Teokset line: 195", 0, uusi.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testTallenna209 
   * @throws TietoException when error
   */
  @Test
  public void testTallenna209() throws TietoException {    // Teokset: 209
    Teokset teokset = new Teokset(); 
    teokset.lueTiedostosta("testFiles/teokset.dat"); 
    teokset.tallenna("testFiles/teokset.bak"); 
    Teokset toka = new Teokset(); 
    toka.lueTiedostosta("testFiles/teokset.bak"); 
    assertEquals("From: Teokset line: 216", teokset.hae(1).toString(), toka.hae(1).toString()); 
    assertEquals("From: Teokset line: 217", true, teokset.equals(toka)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta248 
   * @throws TietoException when error
   */
  @Test
  public void testLueTiedostosta248() throws TietoException {    // Teokset: 248
    Teokset uusi = new Teokset(); 
    Teokset toka = new Teokset(); 
    uusi.lueTiedostosta("testFiles/teokset.dat"); 
    toka.lueTiedostosta("testFiles/teokset.dat"); 
    assertEquals("From: Teokset line: 254", true, uusi.equals(toka)); 
    toka.lueTiedostosta("testFiles/teoksetEri.dat"); 
    assertEquals("From: Teokset line: 256", false, uusi.equals(toka)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testEquals281 
   * @throws TietoException when error
   */
  @Test
  public void testEquals281() throws TietoException {    // Teokset: 281
    Teokset tama = new Teokset(); 
    Teokset toinen = new Teokset(); 
    toinen.lisaa(new Teos()); 
    assertEquals("From: Teokset line: 286", true, tama.equals(tama)); 
    assertEquals("From: Teokset line: 287", false, tama.equals(toinen)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testGetLkm307 
   * @throws TietoException when error
   */
  @Test
  public void testGetLkm307() throws TietoException {    // Teokset: 307
    Teokset tama = new Teokset(); 
    assertEquals("From: Teokset line: 310", 0, tama.getLkm()); 
    tama.lueTiedostosta("testFiles/teokset.dat"); 
    assertEquals("From: Teokset line: 312", 9, tama.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testAnnaIndeksi325 
   * @throws TietoException when error
   */
  @Test
  public void testAnnaIndeksi325() throws TietoException {    // Teokset: 325
    Teokset teokset = new Teokset(); 
    teokset.lueTiedostosta("testFiles/teokset.dat"); 
    assertEquals("From: Teokset line: 329", 0, teokset.annaIndeksi(1)); 
    assertEquals("From: Teokset line: 330", -1, teokset.annaIndeksi(50)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testHae348 
   * @throws TietoException when error
   */
  @Test
  public void testHae348() throws TietoException {    // Teokset: 348
    Teokset t1 = new Teokset(); 
    t1.lueTiedostosta("testFiles/teokset.dat"); 
    try {
    assertEquals("From: Teokset line: 352", "Nothing", t1.hae(-5).getNimi()); 
    fail("Teokset: 352 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    try {
    assertEquals("From: Teokset line: 353", "Nothing", t1.hae(53).getNimi()); 
    fail("Teokset: 353 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    assertEquals("From: Teokset line: 358", "The Lord of the Rings", t1.hae(1).getNimi());  
    assertEquals("From: Teokset line: 359", "Neuromancer", t1.hae(6).getNimi());  
    assertEquals("From: Teokset line: 360", "Skagboys", t1.hae(5).getNimi());  
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testAnna379 
   * @throws TietoException when error
   */
  @Test
  public void testAnna379() throws TietoException {    // Teokset: 379
    Teokset teokset = new Teokset(); 
    Teos kirja = new Teos(); 
    teokset.lisaa(kirja); 
    assertEquals("From: Teokset line: 384", true, teokset.anna(0).equals(kirja)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testHae399 
   * @throws TietoException when error
   */
  @Test
  public void testHae399() throws TietoException {    // Teokset: 399
    Teokset teokset = new Teokset(); 
    teokset.lueTiedostosta("testFiles/teokset.dat"); 
    List<Teos> tulokset = teokset.hae("", "", "William"); 
    assertEquals("From: Teokset line: 405", "6|0-441-56956-0|Neuromancer|William Gibson|1984", tulokset.get(0).toString());
  } // Generated by ComTest END
}