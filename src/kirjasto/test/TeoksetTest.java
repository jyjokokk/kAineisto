package kirjasto.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import kirjasto.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.04.05 01:54:28 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class TeoksetTest {



  // Generated by ComTest BEGIN
  /** 
   * testLisaa51 
   * @throws TietoException when error
   */
  @Test
  public void testLisaa51() throws TietoException {    // Teokset: 51
    Teokset teokset = new Teokset(); 
    Teos lotr1 = new Teos(), lotr2 = new Teos(); 
    Teos lotr3 = new Teos(); 
    assertEquals("From: Teokset line: 56", 0, teokset.getLkm()); 
    teokset.lisaa(lotr1); assertEquals("From: Teokset line: 57", 1, teokset.getLkm()); 
    teokset.lisaa(lotr2); assertEquals("From: Teokset line: 58", 2, teokset.getLkm()); 
    teokset.lisaa(lotr3); assertEquals("From: Teokset line: 59", 3, teokset.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testHaeId80 
   * @throws TietoException when error
   */
  @Test
  public void testHaeId80() throws TietoException {    // Teokset: 80
    Teokset teokset = new Teokset(); 
    Teos lotr1 = new Teos(), lotr2 = new Teos(), lotr3 = new Teos(); 
    lotr1.vastaaLotr(); lotr3.vastaaLotr(); lotr2.vastaaLotr(); 
    int idLotr1 = lotr1.getId(); 
    teokset.lisaa(lotr1); teokset.lisaa(lotr2); teokset.lisaa(lotr3); 
    assertEquals("From: Teokset line: 87", true, teokset.haeId(idLotr1) == lotr1); 
    assertEquals("From: Teokset line: 88", true, teokset.haeId(idLotr1 + 2) == lotr2); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testTyhjenna121 
   * @throws TietoException when error
   */
  @Test
  public void testTyhjenna121() throws TietoException {    // Teokset: 121
    Teokset uusi = new Teokset(); 
    uusi.lueTiedostosta("testFiles/teokset.dat"); 
    uusi.tyhjenna(); 
    assertEquals("From: Teokset line: 126", 0, uusi.getLkm()); 
    try {
    assertEquals("From: Teokset line: 127", "Markus", uusi.anna(2).getNimi()); 
    fail("Teokset: 127 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta168 
   * @throws TietoException when error
   */
  @Test
  public void testLueTiedostosta168() throws TietoException {    // Teokset: 168
    Teokset uusi = new Teokset(); 
    Teokset toka = new Teokset(); 
    uusi.lueTiedostosta("testFiles/teokset.dat"); 
    toka.lueTiedostosta("testFiles/teokset.dat"); 
    assertEquals("From: Teokset line: 174", true, uusi.equals(toka)); 
    toka.lueTiedostosta("testFiles/teoksetEri.dat"); 
    assertEquals("From: Teokset line: 176", false, uusi.equals(toka)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testEquals210 
   * @throws TietoException when error
   */
  @Test
  public void testEquals210() throws TietoException {    // Teokset: 210
    Teokset tama = new Teokset(); 
    Teokset toinen = new Teokset(); 
    toinen.lisaa(new Teos()); 
    assertEquals("From: Teokset line: 215", true, tama.equals(tama)); 
    assertEquals("From: Teokset line: 216", false, tama.equals(toinen)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testHae260 
   * @throws TietoException when error
   */
  @Test
  public void testHae260() throws TietoException {    // Teokset: 260
    Teokset t1 = new Teokset(); 
    t1.lueTiedostosta("testFiles/teokset.dat"); 
    try {
    assertEquals("From: Teokset line: 264", "Nothing", t1.hae(-5).getNimi()); 
    fail("Teokset: 264 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    try {
    assertEquals("From: Teokset line: 265", "Nothing", t1.hae(53).getNimi()); 
    fail("Teokset: 265 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    assertEquals("From: Teokset line: 270", "The Lord of the Rings", t1.hae(1).getNimi());  
    assertEquals("From: Teokset line: 271", "Neuromancer", t1.hae(6).getNimi());  
    assertEquals("From: Teokset line: 272", "Skagboys", t1.hae(5).getNimi());  
  } // Generated by ComTest END
}